name: Deploy TEST

env:
  APP_IAC_WORKDIR: iac/
  TOKR_FI_IAC_WORKDIR: iac/
  CDK_VERSION: 1.97.0
  SHARED_SERVICES_ACCOUNT_ID: 246443085994
  TARGET_ACCOUNT_ID: 876792468606

on:
  push:
    branches:
      - develop
    paths-ignore:
      - ".github/workflows/deploy-prod.yml"
      - "README.md"

jobs:
  cdkDeploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"

      - name: NPM install
        run: npm ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GH_PACKAGES_PAT }}

      - name: NPM build
        run: npm run build:development

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOY_USER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOY_USER_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.SHARED_SERVICES_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com

      - name: Pull private image
        run: docker pull ${{ env.SHARED_SERVICES_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/awscdk:${{ env.CDK_VERSION }}

      - name: Switch Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOY_USER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOY_USER_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_P2_TEST }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID_P2_TEST }}
          role-skip-session-tagging: true
          role-duration-seconds: 1800
          role-session-name: GithubAction

      - name: Run build and awscdk
        run: |
          docker run --rm \
              -v $(pwd):/app -w /app \
              --env AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
              --env AWS_REGION=$AWS_REGION \
              --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
              --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
              --env AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN \
              --env AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text) \
              ${{ env.SHARED_SERVICES_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/awscdk:${{ env.CDK_VERSION }} \
              sh -c '
                    cd ${{ env.TOKR_FI_IAC_WORKDIR }}; npm ci; npm run build; cdk context --clear; cdk deploy --all --require-approval=never --ci=true --no-color --progress=events;
                    '
